---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "./FormattedDate.astro";
import { Icon } from 'astro-icon';

interface Props {
  work: CollectionEntry<'works'>;
}

const { data, slug } = Astro.props.work;
const today = new Date();
---

<style>
  .card {
    display: grid;
    gap: var(--space-xs);
    container: card / inline-size;
  }
  .content {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-xs);
  }
  /* 60ch = 36rem, 36rem + 1rem * 2 padding = 38rem */
  @container card (inline-size > 38rem) {
    .content {
      grid-template-columns: 1fr 1fr;
      gap: var(--space-m);
    }
    img {
      padding-block-start: var(--space-l);
    }
  }
  footer {
    display: flex;
    justify-content: space-between;
  }
</style>

<article class="card">
  <!-- <div class="grid" data-layout="50-50"> -->
  <div class="content">
    <div class="flow">
      <h2>
        <a href={`/works/${slug}/`}>{data.title}</a>
      </h2>
      <p>{ data.description }</p>
    </div>
    {
      data.image && (
        <img src={data.image.src} alt={data.image.alt} />
      )
    }
  </div>
  <footer>
    <div>
      {
        data.releaseDate && data.releaseDate < today ?
        (
          <FormattedDate date={data.releaseDate} option='m-y' />
        ) :
        (
          <span>work in progress</span>
        )
      } <small>{data.tech}</small>
    </div>
    {
      data.url && (
        <div><a class="button" href={data.url}>Play {data.title} <Icon name="mdi:launch" /> </a></div>
      )
    }
  </footer>
</article>
