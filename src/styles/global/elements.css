/*
  Global styles

  Low-specificity, global styles that apply to the whole
  project: https://cube.fyi/css.html
*/

/* RECURSIVE AXIS RANGES
"MONO" 0 - 1 (decimals
"CASL" 0 - 1 (decimals)
"wght" 300 - 1000
"sint" -15 - 0 (0 = normal)
"CRSV" 0 off, 0.5 auto, 1 on
*/

/* Full-screen container with header & footer technique using html & body from Temani Afif - https://verpex.com/blog/website-tips/modern-layouts-using-css-grid */
html {
  display: grid;
	min-height: 100%;
	background: var(--surface-1);
  /* background-color: var(--bg-surface); */
	color: var(--text-1);
}

body {
  display: grid;
	grid-template-rows: auto 1fr auto;
  font-family: var(--ff-recursive);
  /* DEFAULT Recursive axes */
  --MONO: 0;
  --CASL: 0;
  --wght: 400;
  --slnt: 0;
  --CRSV: 0.5;
  /* For Recursive... */
  font-variation-settings: 'MONO' var(--MONO), 'CASL' var(--CASL), 'wght' var(--wght), 'slnt' var(--slnt), 'CRSV' var(--CRSV);
  font-size: var(--step-0);
}

/* Include any element where you want to alter any Recursive axes */
p,
cite,
em,
strong,
blockquote,
figcaption,
h1,
h2,
h3,
h4,
h5,
h6 {
  font-variation-settings: 'MONO' var(--MONO), 'CASL' var(--CASL), 'wght' var(--wght), 'slnt' var(--slnt), 'CRSV' var(--CRSV);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  --MONO: 0.51;
  --wght: 800;
  line-height: 1.1;
  word-spacing: -.1em;
}

h2,
h3 {
  letter-spacing: var(--tracking);
}

h1, .step-5 {
  font-size: var(--step-5);
  --wght: 900;
}
h2, .step-4 {
  font-size: var(--step-4);
}
h3, .step-3 {
  font-size: var(--step-3);
}
h4, .step-2 {
  font-size: var(--step-2);
}
h5, .step-1 {
  font-size: var(--step-1);
}
h6, .step-0 {
  font-size: var(--step-0);
}

main {
	padding-block: var(--space-l-xl);
}

p,
h1,
h2,
h3,
h4,
h5,
h6,
li,
figcaption {
  max-width: var(--measure);
}

:is(h1, h2, h3, h4, h5, h6)[data-theme='dark'] {
  color: var(--color-2)
}
:is(p, li, figcaption)[data-theme='dark'] {
  color: var(--color-1)
}

article {
  background-color: var(--surface-1);
  padding: var(--space-m);
  border-radius: var(--border-radius);
}

blockquote {
  /* font-style: italic; */
  /* font-size: var(--step-1); */
  --slnt: -8;
  --CASL: 1;
  --CRSV: 1;
  border-inline-start: 4px solid var(--surface-3);
  margin: var(--space-m) 0;
  padding-inline: var(--space-m);

	& p {
		padding-block-end: var(--space-3xs);
	}
}

/* CSS NESTING not yet a baseline feature but I can use because of PostCSS plugin: postcss-preset-env */
a {
  color: var(--link-color);
	&:hover,
	&:focus {
		text-decoration-thickness: 0.2em;
		text-underline-offset: 0.075em;
		text-decoration-color: color-mix(
			in oklab, var(--link-color), transparent 25%
		);
	}
	&:focus-visible {
		text-decoration-thickness: max(0.08em, 1px);
		text-underline-offset: 0.15em;
	}
}

cite {
  --slnt: -15;
  --wght: 500;
  color: var(--text-2);
}

small {
	color: var(--text-2);
}

em {
  --slnt: -15;
}

strong {
  --wght: 700;
}

/* from Andy Bell's personal-site-eleventy */
svg {
  width: 1em;
  height: 1em;
}

img {
  height: auto;
}

img[src*='.svg'] {
  width: 100%;
}

[role='list'] {
  padding: 0;
  margin-block-end: 0;
}

/* TODO finish focus outline css variables */
/* from S.Eckles - https://css-tricks.com/standardizing-focus-styles-with-css-custom-properties/ */
:is(a, button, input, textarea, summary) {
  --outline-size: max(2px, 0.08em);
  --outline-style: solid;
  --outline-color: currentColor;
}

:is(a, button, input, textarea, summary):focus {
  outline: var(--outline-size) var(--outline-style) var(--outline-color);
  outline-offset: var(--outline-offset, var(--outline-size));
}

hr {
  border: none;
  border-top: 1px solid var(--surface-3);
  transform: translateY(-1px);
  margin: var(--space-m-l) 0 !important;
  max-width: 55rem;
}

/*
  The CSS below is from Astro blog starter template and is based off of Bear Blog's default CSS.
  https://github.com/HermanMartinus/bearblog/blob/297026a877bc2ab2b3bdfbd6b9f7961c350917dd/templates/styles/blog/default.css
 */
input {
	font-size: var(--step-0);
}
textarea {
	width: 100%;
	font-size: var(--step-0);
}

table {
	width: 100%;
  /* outline: 1px solid green; */
}

code,
pre {
	font-family: var(--ff-monospace);
	font-size: var(--step--1);
}
code {
	padding: 0.125em 0.313em;
	background-color: var(--surface-2);
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
}
pre {
	padding: var(--space-m);
  overflow-x: auto;
}
pre > code {
	all: unset;
}

mark {
  /* background-color: oklch(90% 0.1 330); */
  background-color: oklch(92% 0.13 193);
}
