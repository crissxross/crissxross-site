/* TODO - copied from wnb-voices - REPLACE or ADAPT for crissxross */

html {
	background: var(--surface-1);
	color: var(--text-1);
}

body {
	font-family: var(--ff-system);
  font-size: var(--step-0);
  /* TODO - check scroll overflow */
	/* to avoid scroll-based layout shifts */
  overflow-y: scroll;
  /* Based on Bear Blog's default CSS (see more below) */
  margin: auto;
  padding: var(--space-m);
	max-width: 65ch;
	text-align: left;
	word-wrap: break-word;
	overflow-wrap: break-word;
}

h1 {
  font-size: var(--step-5);
}
h2 {
  font-size: var(--step-4);
}
h3 {
  font-size: var(--step-3);
}
h4 {
  font-size: var(--step-2);
}
h5 {
  font-size: var(--step-1);
}
h6 {
  font-size: var(--step-0);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1;
	margin: 0 0 var(--space-s) 0;
}

/* TODO finish focus outline css variables */
/* from S.Eckles - https://css-tricks.com/standardizing-focus-styles-with-css-custom-properties/ */
:is(a, button, input, textarea, summary) {
  --outline-size: max(2px, 0.08em);
  --outline-style: solid;
  --outline-color: currentColor;
}

:is(a, button, input, textarea, summary):focus {
  outline: var(--outline-size) var(--outline-style) var(--outline-color);
  outline-offset: var(--outline-offset, var(--outline-size));
}

/* CSS NESTING not yet a baseline feature but I can use because of PostCSS plugin: postcss-preset-env */
a {
  color: var(--primary-5);
	&:hover,
	&:focus {
		text-decoration-thickness: 0.25em;
		text-underline-offset: 0.075em;
	}
	&:not(:hover) {
		/* TODO previously I was reducing opacity - not sure I need this now */
		text-decoration-color: var(--primary-5);
	}
	&:focus-visible {
		text-decoration-thickness: max(0.08em, 1px);
		text-underline-offset: 0.15em;
	}
}

/*
  The CSS in this style tag is based off of Bear Blog's default CSS.
  https://github.com/HermanMartinus/bearblog/blob/297026a877bc2ab2b3bdfbd6b9f7961c350917dd/templates/styles/blog/default.css
  License MIT: https://github.com/HermanMartinus/bearblog/blob/master/LICENSE.md
 */
nav a {
	margin-right: 0.625em;
}
textarea {
	width: 100%;
	font-size: var(--step-0);
}
input {
	font-size: var(--step-0);
}
/* Not sure what this rule is for - it could be for Astro's Content component */
content {
	line-height: 1.6;
}
table {
	width: 100%;
}
img {
	max-width: 100%;
	height: auto;
}
code,
pre {
	font-family: var(--ff-monospace);
	font-size: var(--step--1);
}
code {
	padding: 0.125em 0.313em;
	background-color: var(--surface-2);
}
pre {
	padding: var(--space-m);
}
pre > code {
	all: unset;
}
/* blockquote {
	border: 1px solid #999;
	color: #222;
	padding: 0.125em 0 0.125em 1.25em;
	margin: 0 0 var(--space-xs) 0;
	font-style: italic;
} */
blockquote {
  border-left: 4px solid var(--surface-3);
  font-size: var(--step-1);
  font-style: italic;
  margin: var(--space-m) 0;
  padding-inline: var(--space-m);
}

blockquote p {
  padding-block-end: var(--space-3xs);
}
small {
	color: var(--text-2);
}
