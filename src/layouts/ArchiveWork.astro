---
import type { CollectionEntry } from 'astro:content';
import SingleLayout from './SingleLayout.astro';
import FormattedDate from '../components/FormattedDate.astro';
import VideoYouTube from '../components/VideoYouTube.astro';


type Props = CollectionEntry<'archive'>['data'];

const { title, description, releaseDate, lastReleaseDate, accolades, awards, youtubeVideos, image, collaborators, url } = Astro.props;
---

<style>
  .play {
    display: grid;
    place-content: center;
  }
</style>

<SingleLayout>
  <h1 class="title">{title}</h1>
  <p>
    {
      releaseDate && (
        <FormattedDate date={releaseDate} option='y' />
      )
    }
    {
      lastReleaseDate && (
        <span> &ndash; <FormattedDate date={lastReleaseDate} option='y' /></span>
      )
    }
  </p>
    {
      collaborators && <p>{collaborators}</p>
    }
  <p>{description}</p>
  {
    url && (
      <div class="play">
        <a class="button" data-size="lg" href={url}>Play {title}</a>
      </div>
    )
  }
  <!-- <hr /> -->
  {
    youtubeVideos && youtubeVideos.length > 0 &&
      <div class="video-container">
        <VideoYouTube id={youtubeVideos[0].id} title={title} />
      </div>
  }
  <slot />
  { awards && <h2 class="step-2">Awards</h2> }
  <ul>
  {
    awards &&
      awards?.map((award) => (
        <li><a href={award.url}>{award.name}</a></li>
      ))
  }
  </ul>
  <h2 class="step-2">Publications, exhibitions & performances</h2>
  <!-- <p>Some of the places where <cite>{title}</cite> has appeared:</p> -->
  <p>Some of the places where <cite>{title}</cite> has been published, exhibited or performed:</p>
  <ul>
  {
    accolades &&
      accolades?.map((accolade) => (
        <li><a href={accolade.url}>{accolade.name}</a></li>
      ))
  }
  </ul>
</SingleLayout>
